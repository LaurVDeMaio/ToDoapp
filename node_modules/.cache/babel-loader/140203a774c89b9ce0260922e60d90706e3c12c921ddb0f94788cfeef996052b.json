{"ast":null,"code":"var _jsxFileName = \"/Users/laurendemaio/Documents/GitHub/ToDoapp/src/components/TodoParent.js\";\nimport React from \"react\";\nimport TodoItem from \"./TodoItem\"; // path\nimport AddTodo from \"./TodoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoParent = props => {\n  this.state = {\n    todo: [{\n      id: 1,\n      title: \"Go out\",\n      completed: false\n    }, {\n      id: 2,\n      title: \"Go home\",\n      completed: false\n    }, {\n      id: 3,\n      title: \"Go to bed\",\n      completed: false\n    }, {\n      id: 4,\n      title: \"Do hw\",\n      completed: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\n    // Run this function once for each item in the todo array\n    this.state.todo.map(this.makeOneTodoItem), /*#__PURE__*/_jsxDEV(AddTodo, {\n      addTodoItem: this.addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n\n  //generates random id;\n  const guid = () => {\n    let s4 = () => {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    };\n    //return id of format 'aaaaaaaa'-'aaaa'-'aaaa'-'aaaa'-'aaaaaaaaaaaa'\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  };\n  const deleteItem = id => {\n    console.log(\"Delete from TodoParent \" + id);\n    // Delete the element with id\n    this.setState({\n      // Use filter to remove the element with id\n      todo: this.state.todo.filter(item => item.id !== id)\n    });\n  };\n  const markComplete = id => {\n    console.log(\"MarkComplete from TodoParent \" + id);\n    this.setState({\n      todo: this.state.todo.map((item, index) => {\n        if (item.id === id) {\n          // Only make a copy for the one object that has changed\n          item = {\n            ...item,\n            completed: !item.completed\n          };\n        }\n        // We'll reuse objects that haven't changed and return the toggled object∂\n        return item;\n      })\n    });\n  };\n  const addTodo = newTitle => {\n    console.log(\"addTodo from TodoParent: \" + newTitle);\n    // Create the element to add with a unique id\n    const nextIdNumber = this.state.todo.length + this.guid();\n    const newTodoItem = {\n      id: nextIdNumber,\n      title: newTitle,\n      completed: false\n    };\n    // Handling asynchronous changes of the state\n    //this.setState((state) => ({ todo: [...this.state.todo, newTodoItem] }));\n    this.setState({\n      todo: [...this.state.todo, newTodoItem]\n    });\n  };\n\n  // Produce a JSX element to show a single item\n  // Notice how makeOneTodoItem is used\n  const makeOneTodoItem = todoItemInfo => /*#__PURE__*/_jsxDEV(TodoItem, {\n    // React wants a unique 'key' for each item\n    todo: todoItemInfo // A todo item - This is passed to the TodoItem component\n    ,\n    markComplete: this.markComplete // Function markComplete - This is passed to the TodoItem component\n    ,\n    deleteItem: this.deleteItem\n  }, todoItemInfo.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoParent;\nexport default TodoParent;\nvar _c;\n$RefreshReg$(_c, \"TodoParent\");","map":{"version":3,"names":["React","TodoItem","AddTodo","jsxDEV","_jsxDEV","TodoParent","props","state","todo","id","title","completed","children","map","makeOneTodoItem","addTodoItem","addTodo","fileName","_jsxFileName","lineNumber","columnNumber","guid","s4","Math","floor","random","toString","substring","deleteItem","console","log","setState","filter","item","markComplete","index","newTitle","nextIdNumber","length","newTodoItem","todoItemInfo","_c","$RefreshReg$"],"sources":["/Users/laurendemaio/Documents/GitHub/ToDoapp/src/components/TodoParent.js"],"sourcesContent":["import React from \"react\";\nimport TodoItem from \"./TodoItem\"; // path\nimport AddTodo from \"./TodoForm\";\n\nconst TodoParent = (props) => {\n    this.state = {\n      todo: [\n        { id: 1, title: \"Go out\", completed: false },\n        { id: 2, title: \"Go home\", completed: false },\n        { id: 3, title: \"Go to bed\", completed: false },\n        { id: 4, title: \"Do hw\", completed: false },\n      ],\n    };\n\n    return (\n      <div>\n        {\n          // Run this function once for each item in the todo array\n          this.state.todo.map(this.makeOneTodoItem)\n        }\n        {\n          // Notice how AddTodo is used \n        }\n        <AddTodo addTodoItem={this.addTodo} />\n      </div>\n    );\n  \n  //generates random id;\n  const guid = () => {\n    let s4 = () => {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n    //return id of format 'aaaaaaaa'-'aaaa'-'aaaa'-'aaaa'-'aaaaaaaaaaaa'\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n\n  const deleteItem = (id) => {\n    console.log(\"Delete from TodoParent \" + id);\n    // Delete the element with id\n    this.setState({\n      // Use filter to remove the element with id\n      todo: this.state.todo.filter(item => item.id !== id)\n    })\n  }\n\n  const markComplete = (id) => {\n    console.log(\"MarkComplete from TodoParent \" + id);\n    this.setState(\n      {\n        todo: this.state.todo.map((item, index) => {\n          if (item.id === id) {\n            // Only make a copy for the one object that has changed\n            item = { ...item, completed: !item.completed };\n          }\n          // We'll reuse objects that haven't changed and return the toggled object∂\n          return item;\n        }),\n      }\n    );\n  }\n\n  const addTodo = (newTitle) => {\n    console.log(\"addTodo from TodoParent: \" + newTitle);\n    // Create the element to add with a unique id\n    const nextIdNumber = this.state.todo.length + this.guid();\n    const newTodoItem = { id: nextIdNumber, title: newTitle, completed: false };\n    // Handling asynchronous changes of the state\n    //this.setState((state) => ({ todo: [...this.state.todo, newTodoItem] }));\n    this.setState({ todo: [...this.state.todo, newTodoItem] });\n  };\n\n  // Produce a JSX element to show a single item\n  // Notice how makeOneTodoItem is used\n  const makeOneTodoItem = (todoItemInfo) => (\n    <TodoItem\n      key={todoItemInfo.id} // React wants a unique 'key' for each item\n      todo={todoItemInfo} // A todo item - This is passed to the TodoItem component\n      markComplete={this.markComplete} // Function markComplete - This is passed to the TodoItem component\n      deleteItem={this.deleteItem}\n    />\n  );\n}\n\nexport default TodoParent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/laurendemaio/Documents/GitHub/ToDoapp/src/components/TodoParent.js\";\nimport React from \"react\";\nimport TodoItem from \"./TodoItem\"; // path\nimport AddTodo from \"./TodoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TodoParent extends Component {\n  constructor(props) {\n    super(props);\n    //generates random id;\n    this.guid = () => {\n      let s4 = () => {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n      };\n      //return id of format 'aaaaaaaa'-'aaaa'-'aaaa'-'aaaa'-'aaaaaaaaaaaa'\n      return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    };\n    this.deleteItem = id => {\n      console.log(\"Delete from TodoParent \" + id);\n      // Delete the element with id\n      this.setState({\n        // Use filter to remove the element with id\n        todo: this.state.todo.filter(item => item.id !== id)\n      });\n    };\n    this.markComplete = id => {\n      console.log(\"MarkComplete from TodoParent \" + id);\n      this.setState({\n        todo: this.state.todo.map((item, index) => {\n          if (item.id === id) {\n            // Only make a copy for the one object that has changed\n            item = {\n              ...item,\n              completed: !item.completed\n            };\n          }\n          // We'll reuse objects that haven't changed and return the toggled object∂\n          return item;\n        })\n      });\n    };\n    this.addTodo = newTitle => {\n      console.log(\"addTodo from TodoParent: \" + newTitle);\n      // Create the element to add with a unique id\n      const nextIdNumber = this.state.todo.length + this.guid();\n      const newTodoItem = {\n        id: nextIdNumber,\n        title: newTitle,\n        completed: false\n      };\n      // Handling asynchronous changes of the state\n      //this.setState((state) => ({ todo: [...this.state.todo, newTodoItem] }));\n      this.setState({\n        todo: [...this.state.todo, newTodoItem]\n      });\n    };\n    // Produce a JSX element to show a single item\n    // Notice how makeOneTodoItem is used\n    this.makeOneTodoItem = todoItemInfo => /*#__PURE__*/_jsxDEV(TodoItem, {\n      // React wants a unique 'key' for each item\n      todo: todoItemInfo // A todo item - This is passed to the TodoItem component\n      ,\n      markComplete: this.markComplete // Function markComplete - This is passed to the TodoItem component\n      ,\n      deleteItem: this.deleteItem\n    }, todoItemInfo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this);\n    this.state = {\n      todo: [{\n        id: 1,\n        title: \"Go out\",\n        completed: false\n      }, {\n        id: 2,\n        title: \"Go home\",\n        completed: false\n      }, {\n        id: 3,\n        title: \"Go to bed\",\n        completed: false\n      }, {\n        id: 4,\n        title: \"Do hw\",\n        completed: false\n      }]\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\n      // Run this function once for each item in the todo array\n      this.state.todo.map(this.makeOneTodoItem), /*#__PURE__*/_jsxDEV(AddTodo, {\n        addTodoItem: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default TodoParent;","map":{"version":3,"names":["React","TodoItem","AddTodo","jsxDEV","_jsxDEV","TodoParent","Component","constructor","props","guid","s4","Math","floor","random","toString","substring","deleteItem","id","console","log","setState","todo","state","filter","item","markComplete","map","index","completed","addTodo","newTitle","nextIdNumber","length","newTodoItem","title","makeOneTodoItem","todoItemInfo","fileName","_jsxFileName","lineNumber","columnNumber","render","children","addTodoItem"],"sources":["/Users/laurendemaio/Documents/GitHub/ToDoapp/src/components/TodoParent.js"],"sourcesContent":["import React from \"react\";\nimport TodoItem from \"./TodoItem\"; // path\nimport AddTodo from \"./TodoForm\";\n\nclass TodoParent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todo: [\n        { id: 1, title: \"Go out\", completed: false },\n        { id: 2, title: \"Go home\", completed: false },\n        { id: 3, title: \"Go to bed\", completed: false },\n        { id: 4, title: \"Do hw\", completed: false },\n      ],\n    };\n  }\n\n  //generates random id;\n  guid = () => {\n    let s4 = () => {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n    //return id of format 'aaaaaaaa'-'aaaa'-'aaaa'-'aaaa'-'aaaaaaaaaaaa'\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n\n  deleteItem = (id) => {\n    console.log(\"Delete from TodoParent \" + id);\n    // Delete the element with id\n    this.setState({\n      // Use filter to remove the element with id\n      todo: this.state.todo.filter(item => item.id !== id)\n    })\n  }\n\n  markComplete = (id) => {\n    console.log(\"MarkComplete from TodoParent \" + id);\n    this.setState(\n      {\n        todo: this.state.todo.map((item, index) => {\n          if (item.id === id) {\n            // Only make a copy for the one object that has changed\n            item = { ...item, completed: !item.completed };\n          }\n          // We'll reuse objects that haven't changed and return the toggled object∂\n          return item;\n        }),\n      }\n    );\n  }\n\n  addTodo = (newTitle) => {\n    console.log(\"addTodo from TodoParent: \" + newTitle);\n    // Create the element to add with a unique id\n    const nextIdNumber = this.state.todo.length + this.guid();\n    const newTodoItem = { id: nextIdNumber, title: newTitle, completed: false };\n    // Handling asynchronous changes of the state\n    //this.setState((state) => ({ todo: [...this.state.todo, newTodoItem] }));\n    this.setState({ todo: [...this.state.todo, newTodoItem] });\n  };\n\n  // Produce a JSX element to show a single item\n  // Notice how makeOneTodoItem is used\n  makeOneTodoItem = (todoItemInfo) => (\n    <TodoItem\n      key={todoItemInfo.id} // React wants a unique 'key' for each item\n      todo={todoItemInfo} // A todo item - This is passed to the TodoItem component\n      markComplete={this.markComplete} // Function markComplete - This is passed to the TodoItem component\n      deleteItem={this.deleteItem}\n    />\n  );\n\n  render() {\n    return (\n      <div>\n        {\n          // Run this function once for each item in the todo array\n          this.state.todo.map(this.makeOneTodoItem)\n        }\n        {\n          // Notice how AddTodo is used \n        }\n        <AddTodo addTodoItem={this.addTodo} />\n      </div>\n    );\n  }\n}\n\nexport default TodoParent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
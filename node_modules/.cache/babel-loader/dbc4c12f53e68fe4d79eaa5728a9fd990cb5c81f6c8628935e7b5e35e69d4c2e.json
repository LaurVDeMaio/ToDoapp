{"ast":null,"code":"var _jsxFileName = \"/Users/laurendemaio/Documents/GitHub/ToDoapp/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = props => {\n  _s();\n  // create a ref to store the text of the DOM input element\n  this.input = /*#__PURE__*/React.createRef();\n  const [setInput] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a task\",\n      ref: set(this.input)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        this.props.addTodoItem(this.input.current.value);\n        this.input.current.value = \"\"; // clear input\n      },\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n_s(TodoForm, \"Q0L6qtt2mFjERKp55Rf8gOSz11U=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoForm","props","_s","input","createRef","setInput","children","type","placeholder","ref","set","fileName","_jsxFileName","lineNumber","columnNumber","onClick","addTodoItem","current","value","_c","$RefreshReg$"],"sources":["/Users/laurendemaio/Documents/GitHub/ToDoapp/src/components/TodoForm.js"],"sourcesContent":["import React, {useState} from \"react\";\n\nconst TodoForm = (props) => {\n    // create a ref to store the text of the DOM input element\n    this.input = React.createRef();\n\n    const [setInput] = useState(0);\n\n    return (\n      <div>\n        <input type=\"text\" placeholder=\"Enter a task\" ref={set(this.input)} />\n        <button\n          onClick={() => {\n            this.props.addTodoItem(this.input.current.value);\n            this.input.current.value = \"\"; // clear input\n          }}\n        >\n          {\" + \"}\n        </button>\n      </div>\n    );\n  }\n\n\nexport default TodoForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB;EACA,IAAI,CAACC,KAAK,gBAAGP,KAAK,CAACQ,SAAS,CAAC,CAAC;EAE9B,MAAM,CAACC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAE9B,oBACEE,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAOQ,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,cAAc;MAACC,GAAG,EAAEC,GAAG,CAAC,IAAI,CAACP,KAAK;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtEf,OAAA;MACEgB,OAAO,EAAEA,CAAA,KAAM;QACb,IAAI,CAACd,KAAK,CAACe,WAAW,CAAC,IAAI,CAACb,KAAK,CAACc,OAAO,CAACC,KAAK,CAAC;QAChD,IAAI,CAACf,KAAK,CAACc,OAAO,CAACC,KAAK,GAAG,EAAE,CAAC,CAAC;MACjC,CAAE;MAAAZ,QAAA,EAED;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAZ,EAAA,CAnBGF,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAsBd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}